digraph Tree {
node [shape=box, style="filled, rounded", color="black", fontname="Microsoft YaHei"] ;
edge [fontname="Microsoft YaHei"] ;
0 [label="电子亲和能GeomWeighted <= 0.204\ngini = 0.5\nsamples = 3955\nvalue = [1977.5, 1977.5]\nclass = 成功", fillcolor="#ffffff"] ;
1 [label="orgavgpol几何平均 <= 12.265\ngini = 0.423\nsamples = 2191\nvalue = [1683.034, 732.258]\nclass = 失败", fillcolor="#f0b88f"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label="原子半径MinWeighted <= 0.084\ngini = 0.484\nsamples = 1209\nvalue = [745.979, 517.03]\nclass = 失败", fillcolor="#f7d8c2"] ;
1 -> 2 ;
3 [label="orgavgpol几何平均 <= 7.789\ngini = 0.269\nsamples = 411\nvalue = [410.943, 78.485]\nclass = 失败", fillcolor="#ea995f"] ;
2 -> 3 ;
4 [label="gini = 0.499\nsamples = 109\nvalue = [52.349, 55.83]\nclass = 成功", fillcolor="#f3f9fd"] ;
3 -> 4 ;
5 [label="gini = 0.112\nsamples = 302\nvalue = [358.594, 22.655]\nclass = 失败", fillcolor="#e78946"] ;
3 -> 5 ;
6 [label="orgavgpol几何平均 <= 8.912\ngini = 0.491\nsamples = 798\nvalue = [335.036, 438.545]\nclass = 成功", fillcolor="#d0e8f9"] ;
2 -> 6 ;
7 [label="gini = 0.452\nsamples = 187\nvalue = [132.182, 69.585]\nclass = 失败", fillcolor="#f3c3a1"] ;
6 -> 7 ;
8 [label="gini = 0.458\nsamples = 611\nvalue = [202.854, 368.961]\nclass = 成功", fillcolor="#a6d3f3"] ;
6 -> 8 ;
9 [label="原子半径MeanWeighted <= 0.138\ngini = 0.304\nsamples = 982\nvalue = [937.055, 215.227]\nclass = 失败", fillcolor="#eb9e66"] ;
1 -> 9 ;
10 [label="原子半径MinWeighted <= 0.067\ngini = 0.471\nsamples = 203\nvalue = [133.491, 81.722]\nclass = 失败", fillcolor="#f5ceb2"] ;
9 -> 10 ;
11 [label="gini = 0.088\nsamples = 83\nvalue = [100.773, 4.855]\nclass = 失败", fillcolor="#e68743"] ;
10 -> 11 ;
12 [label="gini = 0.419\nsamples = 120\nvalue = [32.718, 76.867]\nclass = 成功", fillcolor="#8dc7f0"] ;
10 -> 12 ;
13 [label="电子亲和能GeomWeighted <= 0.14\ngini = 0.244\nsamples = 779\nvalue = [803.564, 133.506]\nclass = 失败", fillcolor="#e9965a"] ;
9 -> 13 ;
14 [label="gini = 0.139\nsamples = 517\nvalue = [598.092, 48.547]\nclass = 失败", fillcolor="#e78b49"] ;
13 -> 14 ;
15 [label="gini = 0.414\nsamples = 262\nvalue = [205.472, 84.958]\nclass = 失败", fillcolor="#f0b58b"] ;
13 -> 15 ;
16 [label="原子半径MinWeighted <= 0.309\ngini = 0.309\nsamples = 1764\nvalue = [294.466, 1245.242]\nclass = 成功", fillcolor="#68b4eb"] ;
0 -> 16 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
17 [label="orgavgpol几何平均 <= 22.875\ngini = 0.145\nsamples = 1258\nvalue = [82.45, 966.904]\nclass = 成功", fillcolor="#4aa5e7"] ;
16 -> 17 ;
18 [label="orgavgpol几何平均 <= 8.07\ngini = 0.087\nsamples = 1182\nvalue = [44.497, 928.875]\nclass = 成功", fillcolor="#42a2e6"] ;
17 -> 18 ;
19 [label="gini = 0.465\nsamples = 33\nvalue = [22.249, 12.946]\nclass = 失败", fillcolor="#f4caac"] ;
18 -> 19 ;
20 [label="gini = 0.046\nsamples = 1149\nvalue = [22.249, 915.929]\nclass = 成功", fillcolor="#3e9fe6"] ;
18 -> 20 ;
21 [label="原子半径MeanWeighted <= 0.552\ngini = 0.5\nsamples = 76\nvalue = [37.953, 38.029]\nclass = 成功", fillcolor="#ffffff"] ;
17 -> 21 ;
22 [label="gini = 0.067\nsamples = 46\nvalue = [1.309, 36.411]\nclass = 成功", fillcolor="#40a1e6"] ;
21 -> 22 ;
23 [label="gini = 0.081\nsamples = 30\nvalue = [36.645, 1.618]\nclass = 失败", fillcolor="#e68742"] ;
21 -> 23 ;
24 [label="原子半径MeanWeighted <= 0.574\ngini = 0.491\nsamples = 506\nvalue = [212.015, 278.339]\nclass = 成功", fillcolor="#d0e8f9"] ;
16 -> 24 ;
25 [label="orgavgpol几何平均 <= 11.45\ngini = 0.477\nsamples = 186\nvalue = [119.095, 76.867]\nclass = 失败", fillcolor="#f6d2b9"] ;
24 -> 25 ;
26 [label="gini = 0.43\nsamples = 82\nvalue = [23.557, 51.784]\nclass = 成功", fillcolor="#93caf1"] ;
25 -> 26 ;
27 [label="gini = 0.329\nsamples = 104\nvalue = [95.538, 25.083]\nclass = 失败", fillcolor="#eca26d"] ;
25 -> 27 ;
28 [label="原子半径MinWeighted <= 0.748\ngini = 0.432\nsamples = 320\nvalue = [92.92, 201.472]\nclass = 成功", fillcolor="#94caf1"] ;
24 -> 28 ;
29 [label="gini = 0.169\nsamples = 218\nvalue = [17.014, 165.87]\nclass = 成功", fillcolor="#4da7e8"] ;
28 -> 29 ;
30 [label="gini = 0.435\nsamples = 102\nvalue = [75.907, 35.601]\nclass = 失败", fillcolor="#f1bc96"] ;
28 -> 30 ;
}
